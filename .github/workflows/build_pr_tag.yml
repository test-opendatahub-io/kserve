name: Trigger build on PR and Create Tag and Release with Changelog

on:
  # pull_request:
  #   paths:      
  #     - '.github/workflows/go-lint.yml'
  #     - '.github/workflows/ci.yml'

  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the new release'
        required: true

permissions:
  contents: write
  packages: write
  pull-requests: write
  
jobs:
  check-prev-tag:
    runs-on: ubuntu-latest
    outputs:
      old_tag: ${{ steps.get_tag.outputs.old_tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      
      - name: Get latest tag
        id: get_tag
        run: |
          echo "old_tag_name=$(git ls-remote --tags origin | awk -F'/' '{print $3}' | grep -v '{}' | sort -V | tail -n1)" >> $GITHUB_OUTPUT
      - name: print tag
        id: print_tag
        run: | 
          echo "Old Tag=${{ steps.get_tag.outputs.old_tag_name }}"
          echo "NEW_TAG=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          echo "$(basename ${{ github.ref }})"

      - name: Check if tag exists
        id: check_tag
        run: |
         import sys
         import subprocess
         tag_name = "${{ github.event.inputs.tag_name }}"
         command = ['git', 'tag', '-l', tag_name]
         output = subprocess.check_output(command, stderr=subprocess.STDOUT)
         if output.decode() != "":
           print(f"Error: Tag '{tag_name}' already exists.", file=sys.stderr)
           sys.exit(1)
         else:
           print(f"Tag '{tag_name}' does not exists.")
        
        shell: python
        continue-on-error: false

#this works only if params.env contains image:tag_version_number
  create-pr:
    runs-on: ubuntu-latest
    needs: check-prev-tag
    env:
      GITHUB_BRANCH: ${{ github.ref }}
    outputs:
      pr_number: ${{ steps.create-pull-request.outputs.pr_number }} #${{ steps.cpr.outputs.pull-request-number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
      - name: Create and checkout new branch
        id: create_branch
        run: |
          BRANCH_NAME="update-param-env-${{ github.event.inputs.tag_name }}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
      - name: Update params.env with new release version
        run: |     
          sed -i 's|:v[0-9.]*\b|:${{ github.event.inputs.tag_name }}|gm'  config/overlays/odh/params.env
      - name: Commit changes
        run: |
          git add  config/overlays/odh/params.env
          git commit -m "Update image refs for odh release"
          git fetch origin $BRANCH_NAME
          git rebase origin/$BRANCH_NAME
          git push origin $BRANCH_NAME
      - name: Create Pull Request
        id: create-pull-request
        run: | 
          PR_URL=$(gh pr create -B ${{ github.ref }} -H ${{ env.BRANCH_NAME }} --title '[ODH Release] Update images for ${{ github.event.inputs.tag_name }}' --body 'Update images for ${{ github.event.inputs.tag_name }}')
          echo "PR_URL=${PR_URL}" >> $GITHUB_ENV
          pr_number=$(echo "$PR_URL" | grep -o -E '[0-9]+$')
          echo "pr_number=${pr_number}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
  
      # - name: Create Pull Request
      #   uses: devops-infra/action-pull-request@v0.5.5
      #   id: cpr
      #   with:
      #     # commit-message: Update image refs for odh release
      #     title: '[ODH Release] Update images for ${{ github.event.inputs.tag_name }}'
      #     body: Update images for ${{ github.event.inputs.tag_name }}
      #     github_token: ${{ secrets.PAT_TOKEN }}
      #     source_branch: ${{env.BRANCH_NAME}}
      #     target_branch: ${{ github.ref }}
          # delete-branch: true

  wait-checks:
    runs-on: ubuntu-latest
    needs: [ check-prev-tag,create-pr ] 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Watching PR if Checks finished without errors
        id: wait-checks
        run:
          gh pr checks  ${{ needs.create-pr.outputs.pr_number }}  --watch --fail-fast 
        env:     
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}


  merge-pr:
    needs: [ check-prev-tag,create-pr, wait-checks ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
  
      - name: Enable Pull Request Automerge
        if: ${{ needs.wait-checks.result == 'success' }}
        run: gh pr merge --merge --auto  ${{ needs.create-pr.outputs.pr_number }} 
        env:     
           GH_TOKEN: ${{ secrets.PAT_TOKEN }}
   
      

  changelog:
    name: Changelog
    needs: [ check-prev-tag,create-pr,wait-checks,merge-pr]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
      - name: Create Tag
        id: create_tag
        run: |
          git tag -a ${{ github.event.inputs.tag_name }} -m "Prepare for ODH release ${{ github.event.inputs.tag_name }}"
          git push origin ${{ github.event.inputs.tag_name }}
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          tag_name: ${{ github.event.inputs.tag_name }}
          prerelease: false
          draft: false
    #this takes the path of payload to upload as an asset in the changelog
          files: bin/*
          generate_release_notes: true
          name: ${{ github.event.inputs.tag_name }}
