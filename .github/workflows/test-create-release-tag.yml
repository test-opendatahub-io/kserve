name: TEST - ODH Create Tag and Release with Changelog

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Test Tag name for the new release'
        required: true

permissions:
  contents: write
  packages: write
  pull-requests: write
  actions: write  

jobs:
  create-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
      actions: write  
    env:
      GITHUB_BRANCH: ${{ github.ref }}
    # outputs:
    #   pr_number: ${{ steps.cpr.outputs.pull-request-number }}
    #   pr_ops: ${{ steps.cpr.outputs.pull-request-operation}}
    steps:
      - name: Generate github-app token
        id: app-token
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ secrets.DEVOPS_APP_ID }}
          private_key: ${{ secrets.DEVOPS_APP_PRIVATE_KEY }}   
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Update params.env with new release version
        run: |     
          sed -i 's|:v[0-9.]*\b|:${{ github.event.inputs.tag_name }}|gm' config/overlays/odh/params.env
      - name: list pull requests
        run: gh pr list
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}                
      # - name: Commit changes
      #   run: |
      #     git config --global user.email "github-actions@github.com"
      #     git config --global user.name "GitHub Actions"
      #     git checkout -b release_update
      #     # git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/test-opendatahub-io/kserve.git"
      #     git add config/overlays/odh/params.env
      #     git commit -m "Update image refs for odh release."   
      #     git push origin release_update
      #     gh repo set-default test-opendatahub-io/kserve
      #     gh pr create --base release-v0.12.1 --head  test-opendatahub-io:release_update --title "The bug is fixed" --body "Everything works again"
      #   env:     
      #     GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      # - name: craate a pull requests
      #   run: gh pr create --base release-v0.12.1 --head release_update --title "The bug is fixed" --body "Everything works again"
      #   env:
      #     GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}                          
      # - name: Create report file
      #   run: date +%s > report.txt
      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v5
      #   with:
      #     commit-message: Add report file
      #     title: '[Example] Add report file'
      #     body: >
      #       This PR is auto-generated by 
      #       [create-pull-request](https://github.com/peter-evans/create-pull-request).
      #     labels: report, automated pr
      #     branch: release-0.12.1
      #     token:  ${{ steps.app-token.outputs.token }}
      
      - name: Update params.env with new release version
        run: |     
          sed -i 's|:v[0-9.]*\b|:${{ github.event.inputs.tag_name }}|gm' config/overlays/odh/params.env
      - name: Commit changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          # git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/test-opendatahub-io/kserve.git"
          git add config/overlays/odh/params.env
          git commit -m "Update image refs for odh release."       
          echo  ${{ env.GITHUB_BRANCH }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        id: cpr
        with:
          commit-message: update changelog
          title: '[ODH Release] Update images for ${{ github.event.inputs.tag_name }}'
          body: Update images for ${{ github.event.inputs.tag_name }}
          token:  ${{ secrets.PAT_TOKEN }}
          

  merge-pr:
    needs: [ create-pr ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Enable Pull Request Automerge
        if: needs.create-pr.outputs.outputs.pr_ops == 'created'
        uses: peter-evans/enable-pull-request-automerge@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          pull-request-number: ${{ needs.create-pr.outputs.pr_number }}
          merge-method: merge

  